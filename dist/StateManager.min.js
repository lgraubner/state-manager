/**
 * StateManager - v3.2.0
 * Javascript handling for mediaquery breakpoints.
 * https://github.com/lgraubner/state-manager
 *
 * Copyright Lars Graubner <mail@larsgraubner.de>
 * Under MIT License
 */
var StateManager=function(t,e,i){"use strict";function n(t,e){var i;for(i=0;i<t.length;i++)e(t[i],i)}function a(t){return"[object Array]"===Object.prototype.toString.call(t)}function r(t){return!!(t&&t.constructor&&t.call&&t.apply)}var c=function(e,i,n){this.mq=e,this.handler=i,this.context=n;var a=this;this.matchMedia=t.matchMedia(e),this.listenerFunction=function(t){t.matches?a.matchCallback():a.unmatchCallback()},this.matchMedia.addListener(this.listenerFunction),this.matchMedia.matches&&this.matchCallback()};c.prototype.matchCallback=function(){var t=this.handler,e=this;r(t)?t.apply(this.context):(r(t.match)&&t.match.apply(this.context),a(t.match)&&n(t.match,function(t){t.apply(e.context)}))},c.prototype.unmatchCallback=function(){var t=this.handler,e=this;r(t.unmatch)&&t.unmatch.apply(this.context),a(t.match)&&n(t.unmatch,function(t){t.apply(e.context)})},c.prototype.destroy=function(){this.matchMedia.removeListener(this.listenerFunction),this.matchMedia=i,this.context=i,this.mq=i,this.handler=i};var h=function(e){if(!t.matchMedia)throw new Error("matchMedia is not supported. Please visit: https://github.com/lgraubner/state-manager#supported-browsers");this.queries=[],this.context=e||t};return h.prototype.register=function(t,e){var i=new c(t,e,this.context);return this.queries.push(i),i},h.prototype.deregister=function(t){t.destroy();var e=[];n(this.queries,function(i){i!==t&&e.push(i)}),this.queries=e},h.prototype.destroy=function(){var t=this;n(this.queries,function(e){t.deregister(e)}),this.context=i},h}(this,document);