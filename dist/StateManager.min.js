/**
 * StateManager v5.0.0 - Javascript handling for mediaquery breakpoints.
 * Copyright 2016 Lars Graubner - https://github.com/lgraubner/state-manager
 * License: MIT
 */
!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):t.StateManager=e()}(this,function(){return function(t){function e(t,e){var i;for(i=0;i<t.length;i++)e(t[i],i)}function i(t){return!!(t&&t.constructor&&t.call&&t.apply)}function r(e,i){var r=this;this.mq=e,this.handler=i,this.matchMedia=t.matchMedia(e),this.matchesMQ=this.matchMedia.matches,this.listenerFunction=function(t){r.matchesMQ=t.matches,r.executeCallback()},this.matchMedia.addListener(this.listenerFunction),this.executeCallback()}function n(){var e="matchMedia is not supported. Please visit: https://github.com/lgraubner/state-manager#supported-browsers";if(!t.matchMedia)throw new Error(e);this.queries=[]}return r.prototype.executeCallback=function(){var t=this.handler;i(t)&&t.call(this,this.matchesMQ)},r.prototype.destroy=function(){this.matchMedia.removeListener(this.listenerFunction),this.matchMedia=void 0,this.matchesMQ=void 0,this.mq=void 0,this.handler=void 0},n.prototype.register=function(t,e){var n;if("string"!=typeof t)throw new TypeError("No media query provided.");if(!i(e))throw new TypeError("Second argument should be an handler function.");return n=new r(t,e),this.queries.push(n),n},n.prototype.deregister=function(t){var i=[];t.destroy(),e(this.queries,function(e){e!==t&&i.push(e)}),this.queries=i},n.prototype.matches=function(e){return t.matchMedia(e).matches},n.prototype.destroy=function(){var t=this;e(this.queries,function(e){t.deregister(e)})},n}(window)});