/**
 * StateManager v4.0.0 - Javascript handling for mediaquery breakpoints.
 * Copyright 2015 Lars Graubner - https://github.com/lgraubner/state-manager
 * License: MIT
 */
var StateManager=function(t,e,i){"use strict";function n(t,e){var i;for(i=0;i<t.length;i++)e(t[i],i)}function a(t){return"[object Array]"===Object.prototype.toString.call(t)}function h(t){return!!(t&&t.constructor&&t.call&&t.apply)}var c=function(e,i,n){this.mq=e,this.handler=i,this.context=n;var a=this;this.matchMedia=t.matchMedia(e),this.matches=this.matchMedia.matches,this.listenerFunction=function(t){t.matches?a.matchCallback():a.unmatchCallback()},this.matchMedia.addListener(this.listenerFunction),this.matches&&this.matchCallback()};c.prototype.matchCallback=function(){var t=this.handler,e=this;h(t.match)&&t.match.apply(this.context),a(t.match)&&n(t.match,function(t){h(t)&&t.apply(e.context)})},c.prototype.unmatchCallback=function(){var t=this.handler,e=this;h(t.unmatch)&&t.unmatch.apply(this.context),a(t.unmatch)&&n(t.unmatch,function(t){h(t)&&t.apply(e.context)})},c.prototype.destroy=function(){this.matchMedia.removeListener(this.listenerFunction),this.matchMedia=i,this.matches=i,this.context=i,this.mq=i,this.handler=i};var s=function(e){if(!t.matchMedia)throw new Error("matchMedia is not supported. Please visit: https://github.com/lgraubner/state-manager#supported-browsers");this.queries=[],this.context=e||t};return s.prototype.register=function(t,e,i){var n=new c(t,{match:e,unmatch:i},this.context);return this.queries.push(n),n},s.prototype.deregister=function(t){t.destroy();var e=[];n(this.queries,function(i){i!==t&&e.push(i)}),this.queries=e},s.prototype.destroy=function(){var t=this;n(this.queries,function(e){t.deregister(e)}),this.context=i},s}(this,document);